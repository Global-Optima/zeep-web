version: '3.8'

services:
  postgres:
    container_name: zeep-postgres
    image: postgres
    ports:
      - '${DB_PORT:-5432}:5432'
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    env_file:
      - ./.env

  pgadmin:
    container_name: zeep-pgadmin
    image: dpage/pgadmin4
    depends_on:
      - postgres
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_PASSWORD}
    restart: unless-stopped
    env_file:
      - ./.env

  redis:
    container_name: zeep-redis
    image: redis
    ports:
      - '6379:6379'
    command:
      [
        'redis-server',
        '--requirepass',
        '${REDIS_PASSWORD}',
        '--appendonly',
        'yes',
      ]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
    restart: unless-stopped
    env_file:
      - ./.env

  redis-insight:
    container_name: zeep-redis-insight
    image: redis/redisinsight:latest
    depends_on:
      - redis
    ports:
      - '5540:8001'
    volumes:
      - redis-insight:/db
    environment:
      REDIS_HOST: zeep-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    restart: unless-stopped
    env_file:
      - ./.env

  # zookeeper:
  #   container_name: zeep-zookeeper
  #   image: confluentinc/cp-zookeeper:latest
  #   ports:
  #     - '2181:2181'
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   restart: unless-stopped

  # kafka:
  #   container_name: zeep-kafka
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - '9092:9092'
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: 'zeep-zookeeper:2181'
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_CREATE_TOPICS: |
  #       ${KAFKA_TOPIC_ACTIVE_ORDERS}:1:1,
  #       ${KAFKA_TOPIC_COMPLETED_ORDERS}:1:1
  #   restart: unless-stopped
  #   env_file:
  #     - ./.env

  # kafka-ui:
  #   container_name: zeep-kafka-ui
  #   image: provectuslabs/kafka-ui:latest
  #   depends_on:
  #     - kafka
  #   ports:
  #     - '8090:8080'
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: zeep-cluster
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zeep-zookeeper:2181
  #   restart: unless-stopped

volumes:
  postgres-data:
  redis-insight:
