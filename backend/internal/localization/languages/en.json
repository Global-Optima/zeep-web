{
  "audit": {
    "create": {
      "franchisee": "Franchisee *{{.Name}}* was created",
      "region": "Region *{{.Name}}* was created",
      "product": "Product *{{.Name}}* was created",
      "productCategory": "Product category *{{.Name}}* was created",
      "storeProduct": "Store product *{{.Name}}* was created in store *{{.StoreName}}*",
      "employee": "Employee *{{.Name}}* was created",
      "storeEmployee": "Store employee *{{.Name}}* was created",
      "warehouseEmployee": "Warehouse employee *{{.Name}}* was created",
      "franchiseeEmployee": "Franchisee employee *{{.Name}}* was created",
      "regionEmployee": "Region employee *{{.Name}}* was created",
      "adminEmployee": "Admin employee *{{.Name}}* was created",
      "additive": "Additive *{{.Name}}* was created",
      "additiveCategory": "Additive category *{{.Name}}* was created",
      "storeAdditive": "Store additive *{{.Name}}* was created in store *{{.StoreName}}*",
      "productSize": "Product size *{{.Name}}* was created",
      "recipeSteps": "Recipe steps *{{.Name}}* were created",
      "store": "Store *{{.Name}}* was created",
      "warehouse": "Warehouse *{{.Name}}* was created",
      "storeStock": "Store warehouse stock *{{.Name}}* was created in store *{{.StoreName}}*",
      "ingredient": "Ingredient *{{.Name}}* was created",
      "ingredientCategory": "Ingredient category *{{.Name}}* was created",
      "stockRequest": "New stock request created in store *{{.Name}}*.",
      "stockMaterial": "Stock material *{{.Name}}* was created",
      "stockMaterialCategory": "Stock material category *{{.Name}}* was created",
      "warehouseStock": "Warehouse stock *{{.Name}}* was created",
      "supplier": "Supplier *{{.Name}}* was created",
      "unit": "Unit *{{.Name}}* was created"
    },
    "update": {
      "franchisee": "Franchisee *{{.Name}}* was updated",
      "region": "Region *{{.Name}}* was updated",
      "product": "Product *{{.Name}}* was updated",
      "productCategory": "Product category *{{.Name}}* was updated",
      "storeProduct": "Store product *{{.Name}}* was updated in store *{{.StoreName}}*",
      "employee": "Employee *{{.Name}}* was updated",
      "storeEmployee": "Store employee *{{.Name}}* was updated",
      "warehouseEmployee": "Warehouse employee *{{.Name}}* was updated",
      "franchiseeEmployee": "Franchisee employee *{{.Name}}* was updated",
      "regionEmployee": "Region employee *{{.Name}}* was updated",
      "adminEmployee": "Admin employee *{{.Name}}* was updated",
      "additive": "Additive *{{.Name}}* was updated",
      "additiveCategory": "Additive category *{{.Name}}* was updated",
      "storeAdditive": "Store additive *{{.Name}}* was updated in store *{{.StoreName}}*",
      "productSize": "Product size *{{.Name}}* was updated",
      "recipeSteps": "Recipe steps *{{.Name}}* were updated",
      "store": "Store *{{.Name}}* was updated",
      "warehouse": "Warehouse *{{.Name}}* was updated",
      "storeStock": "Store warehouse stock *{{.Name}}* was updated in store *{{.StoreName}}*",
      "ingredient": "Ingredient *{{.Name}}* was updated",
      "ingredientCategory": "Ingredient category *{{.Name}}* was updated",
      "stockRequest": "Stock request was updated in *{{.Name}}*.",
      "stockMaterial": "Stock material *{{.Name}}* was updated",
      "stockMaterialCategory": "Stock material category *{{.Name}}* was updated",
      "warehouseStock": "Warehouse stock *{{.Name}}* was updated",
      "supplier": "Supplier *{{.Name}}* was updated",
      "unit": "Unit *{{.Name}}* was updated"
    },
    "delete": {
      "franchisee": "Franchisee *{{.Name}}* was deleted",
      "region": "Region *{{.Name}}* was deleted",
      "product": "Product *{{.Name}}* was deleted",
      "productCategory": "Product category *{{.Name}}* was deleted",
      "storeProduct": "Store product *{{.Name}}* was deleted from store *{{.StoreName}}*",
      "employee": "Employee *{{.Name}}* was deleted",
      "storeEmployee": "Store employee *{{.Name}}* was deleted",
      "warehouseEmployee": "Warehouse employee *{{.Name}}* was deleted",
      "franchiseeEmployee": "Franchisee employee *{{.Name}}* was deleted",
      "regionEmployee": "Region employee *{{.Name}}* was deleted",
      "adminEmployee": "Admin employee *{{.Name}}* was deleted",
      "additive": "Additive *{{.Name}}* was deleted",
      "additiveCategory": "Additive category *{{.Name}}* was deleted",
      "storeAdditive": "Store additive *{{.Name}}* was deleted from store *{{.StoreName}}*",
      "productSize": "Product size *{{.Name}}* was deleted",
      "recipeSteps": "Recipe steps *{{.Name}}* were deleted",
      "store": "Store *{{.Name}}* was deleted",
      "warehouse": "Warehouse *{{.Name}}* was deleted",
      "storeStock": "Store warehouse stock *{{.Name}}* was deleted in store *{{.StoreName}}*",
      "ingredient": "Ingredient *{{.Name}}* was deleted",
      "ingredientCategory": "Ingredient category *{{.Name}}* was deleted",
      "stockRequest": " *{{.Name}}* deleted stock request.",
      "stockMaterial": "Stock material *{{.Name}}* was deleted",
      "stockMaterialCategory": "Stock material category *{{.Name}}* was deleted",
      "warehouseStock": "Warehouse stock *{{.Name}}* was deleted",
      "supplier": "Supplier *{{.Name}}* was deleted",
      "unit": "Unit *{{.Name}}* was deleted"
    }
  },
  "responses": {
    "500": "An unexpected error occurred. Please try again later.",
    "404": "The requested resource was not found.",
    "403": "Access denied. You do not have permission to view this resource.",
    "401": "You need to log in to access this resource.",
    "400": "Bad request. Please check your input and try again.",
    "400-json": "Invalid data input",
    "400-query": "Invalid query parameters",
    "200": "The request was successfully processed.",
    "201": "The resource was successfully created.",

    "400-image-upload": "Invalid image data provided. Please check and try again.",
    "400-video-upload": "Invalid video data provided. Please check and try again.",

    "500-order": "An unexpected error occurred with the order. Please try again later.",
    "500-order-create": "An unexpected error occurred while creating the order. Please try again later.",
    "400-order": "Failed to validate order.",
    "400-order-customerName": "Inappropriate customer name.",
    "201-order": "Order was successfully created",
    "200-order-update": "Order successfully updated.",
    "200-order-delete": "Order successfully deleted.",

    "500-product-get": "An unexpected error occurred while fetching product. Please try again later.",
    "500-product-create": "An unexpected error occurred while creating product. Please try again later.",
    "500-product-update": "An unexpected error occurred while updating product. Please try again later.",
    "500-product-delete": "An unexpected error occurred while deleting product. Please try again later.",
    "404-product": "Product not found.",
    "400-product": "Invalid product data provided. Please check and try again.",
    "201-product": "Product successfully created.",
    "200-product-update": "Product successfully updated.",
    "200-product-delete": "Product successfully deleted.",

    "500-productCategory": "An unexpected error occurred with the product category. Please try again later.",
    "400-productCategory": "Invalid product category data provided. Please check and try again.",
    "404-productCategory": "Product category not found.",
    "201-productCategory": "Product category successfully created.",
    "200-productCategory-update": "Product category successfully updated.",
    "200-productCategory-delete": "Product category successfully deleted.",

    "500-productSize-get": "An unexpected error occurred while fetching product size. Please try again later.",
    "500-productSize-create": "An unexpected error occurred while creating product size. Please try again later.",
    "500-productSize-update": "An unexpected error occurred while updating product size. Please try again later.",
    "500-productSize-delete": "An unexpected error occurred while deleting product size. Please try again later.",
    "404-productSize": "Product size not found.",
    "400-productSize": "Invalid product size data provided. Please check and try again.",
    "201-productSize": "Product size successfully created.",
    "200-productSize-update": "Product size successfully updated.",
    "200-productSize-delete": "Product size successfully deleted.",

    "500-additive-get": "An unexpected error occurred while fetching additive data. Please try again later.",
    "500-additive-create": "An unexpected error occurred while creating additive. Please try again later.",
    "500-additive-update": "An unexpected error occurred while updating additive data. Please try again later.",
    "500-additive-delete": "An unexpected error occurred while deleting additive data. Please try again later.",
    "404-additive": "Additive not found.",
    "400-additive": "Invalid additive data provided. Please check and try again.",
    "201-additive": "Additive successfully created.",
    "200-additive-update": "Additive successfully updated.",
    "200-additive-delete": "Additive successfully deleted.",

    "500-additiveCategory-get": "An unexpected error occurred while fetching additive category data. Please try again later.",
    "500-additiveCategory-create": "An unexpected error occurred while creating additive category. Please try again later.",
    "500-additiveCategory-update": "An unexpected error occurred while updating additive category data. Please try again later.",
    "500-additiveCategory-delete": "An unexpected error occurred while deleting additive category data. Please try again later.",
    "404-additiveCategory": "Additive category not found.",
    "400-additiveCategory": "Invalid additive category data provided. Please check and try again.",
    "201-additiveCategory": "Additive category successfully created.",
    "200-additiveCategory-update": "Additive category successfully updated.",
    "200-additiveCategory-delete": "Additive category successfully deleted.",

    "500-stockRequests": "An unexpected error occurred with stock requests. Please try again later.",
    "403-stockRequests": "Access denied to the stock request resource.",
    "400-stockRequests": "Invalid stock request data provided. Please check and try again.",
    "400-stockRequests-insufficientStock": "Insufficient stock to fulfill the request. Please check and try again.",
    "400-stockRequests-existingRequest": "An open stock request already exists. Please check and try again.",
    "400-stockRequests-onlyOneRequestPerDay": "Only one request allowed per day. Please fix and use the existing stock request.",
    "201-stockRequests": "Stock request successfully created.",
    "200-stockRequests-update": "Stock request successfully updated.",
    "200-stockRequests-delete": "Stock request successfully deleted.",

    "500-storeProduct": "An unexpected error occurred with the store product. Please try again later.",
    "400-storeProduct": "Invalid store product data provided. Please check and try again.",
    "201-storeProduct": "Product successfully added to the store.",
    "201-storeProduct-multiple": "Products successfully added to the store.",
    "200-storeProduct-update": "Store product successfully updated.",
    "200-storeProduct-delete": "Product successfully deleted from the store.",

    "500-storeAdditive": "An unexpected error occurred with the store additive. Please try again later.",
    "404-storeAdditive": "Store additive not found",
    "400-storeAdditive": "Invalid store additive data provided. Please check and try again.",
    "201-storeAdditive": "Store additive successfully created.",
    "200-storeAdditive-update": "Store additive successfully updated.",
    "200-storeAdditive-delete": "Store additive successfully deleted.",

    "500-storeStocks": "An unexpected error occurred with the store stocks. Please try again later.",
    "400-storeStocks": "Invalid store stocks data provided. Please check and try again.",
    "201-storeStocks": "Store stock successfully created.",
    "201-storeStocks-multiple": "Store stocks successfully created.",
    "200-storeStocks-update": "Store stocks successfully updated.",
    "200-storeStocks-delete": "Store stocks successfully deleted.",

    "500-storeEmployee-get": "An unexpected error occurred while fetching store employee data. Please try again later.",
    "500-storeEmployee-update": "An unexpected error occurred while updating store employee data. Please try again later.",
    "500-storeEmployee-delete": "An unexpected error occurred while deleting store employee data. Please try again later.",
    "404-storeEmployee": "Store employee not found.",
    "403-storeEmployee": "Access to the store employee is forbidden.",
    "400-storeEmployee": "Invalid store employee data. Please check and try again.",
    "201-storeEmployee": "Store employee successfully created.",
    "200-storeEmployee-update": "Store employee successfully updated.",
    "200-storeEmployee-delete": "Store employee successfully deleted.",

    "500-warehouseEmployee-get": "An unexpected error occurred while fetching warehouse employee data. Please try again later.",
    "500-warehouseEmployee-update": "An unexpected error occurred while updating warehouse employee data. Please try again later.",
    "500-warehouseEmployee-delete": "An unexpected error occurred while deleting warehouse employee data. Please try again later.",
    "404-warehouseEmployee": "Warehouse employee not found.",
    "403-warehouseEmployee": "Access to the warehouse employee is forbidden.",
    "400-warehouseEmployee": "Invalid warehouse employee data. Please check and try again.",
    "201-warehouseEmployee": "Warehouse employee successfully created.",
    "200-warehouseEmployee-update": "Warehouse employee successfully updated.",
    "200-warehouseEmployee-delete": "Warehouse employee successfully deleted.",

    "500-franchiseeEmployee-get": "An unexpected error occurred while fetching franchisee employee data. Please try again later.",
    "500-franchiseeEmployee-update": "An unexpected error occurred while updating franchisee employee data. Please try again later.",
    "500-franchiseeEmployee-delete": "An unexpected error occurred while deleting franchisee employee data. Please try again later.",
    "404-franchiseeEmployee": "Franchisee employee not found.",
    "403-franchiseeEmployee": "Access to the franchisee employee is forbidden.",
    "400-franchiseeEmployee": "Invalid franchisee employee data. Please check and try again.",
    "201-franchiseeEmployee": "Franchisee employee successfully created.",
    "200-franchiseeEmployee-update": "Franchisee employee successfully updated.",
    "200-franchiseeEmployee-delete": "Franchisee employee successfully deleted.",

    "500-regionEmployee-get": "An unexpected error occurred while fetching region employee data. Please try again later.",
    "500-regionEmployee-update": "An unexpected error occurred while updating region employee data. Please try again later.",
    "500-regionEmployee-delete": "An unexpected error occurred while deleting region employee data. Please try again later.",
    "404-regionEmployee": "Region employee not found.",
    "403-regionEmployee": "Access to the region employee is forbidden.",
    "400-regionEmployee": "Invalid region employee data. Please check and try again.",
    "201-regionEmployee": "Region employee successfully created.",
    "200-regionEmployee-update": "Region employee successfully updated.",
    "200-regionEmployee-delete": "Region employee successfully deleted.",

    "500-adminEmployee-get": "An unexpected error occurred while fetching admin employee data. Please try again later.",
    "404-adminEmployee": "Admin employee not found.",
    "403-adminEmployee": "Access to the admin employee is forbidden.",
    "400-adminEmployee": "Invalid admin employee data. Please check and try again.",
    "201-adminEmployee": "Admin employee successfully created.",

    "500-employee-get": "An unexpected error occurred while fetching employee data. Please try again later.",
    "500-employee-updatePassword": "An unexpected error occurred while updating the password. Please try again later.",
    "500-employee-reassignType": "An unexpected error occurred while reassigning employee type. Please try again later.",
    "500-employee-getWorkday": "An unexpected error occurred while fetching employee workday data. Please try again later.",
    "500-employee-getWorkdays": "An unexpected error occurred while fetching employee workdays. Please try again later.",
    "400-employee": "Invalid employee data. Please check and try again.",
    "401-employee": "You need to be logged in to access this resource."
  },
  "notification": {
      "stockRequestStatusUpdated": "Stock request status has been updated to *{{.RequestStatus}}*.",
      "stockRequestStatus": {
          "created": "Created",
          "processed": "Processed",
          "inDelivery": "In Delivery",
          "completed": "Completed",
          "rejectedByStore": "Rejected by Store",
          "rejectedByWarehouse": "Rejected by Warehouse",
          "acceptedWithChange": "Accepted with Change"
        },

      "newOrder": "A new order has been placed by *{{.CustomerName}}*.",
      "storeWarehouseRunOut": "The warehouse is running out of *{{.StockItem}}*.",

      "centralCatalogUpdate": "The central catalog was updated: *{{.Changes}}*.",
      "centralCatalogUpdateDetails": {
        "nameChange": "Name changed from {{.OldName}} to {{.NewName}}",
        "descriptionChange": "Description updated from {{.OldDescription}} to {{.NewDescription}}",
        "imageUrlChange": "Image URL updated from {{.OldImageURL}} to {{.NewImageURL}}",
        "categoryChange": "Category updated from {{.OldCategory}} to {{.NewCategory}}"
      },

      "storeStockExpiration": "*{{.ItemName}}* is expiring on *{{.ExpirationDate}}*.",
      "warehouseStockExpiration": "*{{.ItemName}}* is expiring on *{{.ExpirationDate}}*.",
      "warehouseOutOfStock": "*{{.ItemName}}* is running out of stock.",
      "newStockRequest": "A new stock request was submitted by *{{.RequesterName}}*.",
      "priceChange": "The price of *{{.ProductName}}* has changed from *{{.OldPrice}}* to *{{.NewPrice}}*."
  },
  "stockRequestComments": {
    "quantityMismatch" : "*{{.OriginalMaterialName}}* received *{{.ActualQuantity}}*, expected *{{.Quantity}}*",
    "unexpectedMaterial" : "Unexpected material *{{.MaterialName}}* received *{{.ActualQuantity}}*"
  }
}
