{
  "audit": {
    "create": {
      "product": "Product *{{.Name}}* was created",
      "productCategory": "Product category *{{.Name}}* was created",
      "storeProduct": "Store product *{{.Name}}* was created in store *{{.StoreName}}*",
      "employee": "Employee *{{.Name}}* was created",
      "additive": "Additive *{{.Name}}* was created",
      "additiveCategory": "Additive category *{{.Name}}* was created",
      "storeAdditive": "Store additive *{{.Name}}* was created in store *{{.StoreName}}*",
      "productSize": "Product size *{{.Name}}* was created",
      "storeProductSize": "Store product size *{{.Name}}* was created in store *{{.StoreName}}*",
      "recipeSteps": "Recipe steps *{{.Name}}* were created",
      "store": "Store *{{.Name}}* was created",
      "warehouse": "Warehouse *{{.Name}}* was created",
      "storeStock": "Store warehouse stock *{{.Name}}* was created in store *{{.StoreName}}*",
      "ingredient": "Ingredient *{{.Name}}* was created",
      "stockRequest": "New stock request created in store *{{.Name}}*."
    },
    "update": {
      "product": "Product *{{.Name}}* was updated",
      "productCategory": "Product category *{{.Name}}* was updated",
      "storeProduct": "Store product *{{.Name}}* was updated in store *{{.StoreName}}*",
      "employee": "Employee *{{.Name}}* was updated",
      "additive": "Additive *{{.Name}}* was updated",
      "additiveCategory": "Additive category *{{.Name}}* was updated",
      "storeAdditive": "Store additive *{{.Name}}* was updated in store *{{.StoreName}}*",
      "productSize": "Product size *{{.Name}}* was updated",
      "storeProductSize": "Store product size *{{.Name}}* was updated in store *{{.StoreName}}*",
      "recipeSteps": "Recipe steps *{{.Name}}* were updated",
      "store": "Store *{{.Name}}* was updated",
      "warehouse": "Warehouse *{{.Name}}* was updated",
      "storeStock": "Store warehouse stock *{{.Name}}* was updated in store *{{.StoreName}}*",
      "ingredient": "Ingredient *{{.Name}}* was updated",
      "stockRequest": "Stock request was updated in *{{.Name}}*."
    },
    "delete": {
      "product": "Product *{{.Name}}* was deleted",
      "productCategory": "Product category *{{.Name}}* was deleted",
      "storeProduct": "Store product *{{.Name}}* was deleted in store *{{.StoreName}}*",
      "employee": "Employee *{{.Name}}* was deleted",
      "additive": "Additive *{{.Name}}* was deleted",
      "additiveCategory": "Additive category *{{.Name}}* was deleted",
      "storeAdditive": "Store additive *{{.Name}}* was deleted in store *{{.StoreName}}*",
      "productSize": "Product size *{{.Name}}* was deleted",
      "storeProductSize": "Store product size *{{.Name}}* was deleted in store *{{.StoreName}}*",
      "recipeSteps": "Recipe steps *{{.Name}}* were deleted",
      "store": "Store *{{.Name}}* was deleted",
      "warehouse": "Warehouse *{{.Name}}* was deleted",
      "storeStock": "Store warehouse stock *{{.Name}}* was deleted in store *{{.StoreName}}*",
      "ingredient": "Ingredient *{{.Name}}* was deleted",
      "stockRequest": " *{{.Name}}* deleted stock request."
    }
  },
  "responses": {
    "500": "An unexpected error occurred. Please try again later.",
    "404": "The requested resource was not found.",
    "403": "Access denied. You do not have permission to view this resource.",
    "401": "You need to log in to access this resource.",
    "400": "Bad request. The server could not understand the data sent. Please check your input and try again.",
    "200": "The request was successfully processed.",
    "201": "The resource was successfully created."
  },
  "notification": {
      "stockRequestStatusUpdated": "Stock request status has been updated to *{{.RequestStatus}}*.",
      "stockRequestStatus": {
          "created": "Created",
          "processed": "Processed",
          "inDelivery": "In Delivery",
          "completed": "Completed",
          "rejectedByStore": "Rejected by Store",
          "rejectedByWarehouse": "Rejected by Warehouse",
          "acceptedWithChange": "Accepted with Change"
        },

      "newOrder": "A new order has been placed by *{{.CustomerName}}*.",
      "storeWarehouseRunOut": "The warehouse is running out of *{{.StockItem}}*.",

      "centralCatalogUpdate": "The central catalog was updated: *{{.Changes}}*.",
      "centralCatalogUpdateDetails": {
        "nameChange": "Name changed from {{.OldName}} to {{.NewName}}",
        "descriptionChange": "Description updated from {{.OldDescription}} to {{.NewDescription}}",
        "imageUrlChange": "Image URL updated from {{.OldImageURL}} to {{.NewImageURL}}"
      },

      "stockExpiration": "*{{.ItemName}}* is expiring on *{{.ExpirationDate}}*.",
      "warehouseOutOfStock": "*{{.ItemName}}* is running out of stock.",
      "newStockRequest": "A new stock request was submitted by *{{.RequesterName}}*.",
      "priceChange": "The price of *{{.ProductName}}* has changed from *{{.OldPrice}}* to *{{.NewPrice}}*."
  },
  "stockRequestComments": {
    "quantityMismatch" : "*{{.OriginalMaterialName}}* received *{{.ActualQuantity}}*, expected *{{.Quantity}}*",
    "unexpectedMaterial" : "Unexpected material *{{.MaterialName}}* received *{{.ActualQuantity}}*"
  }
}





