// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/additives": {
            "get": {
                "description": "Retrieves all additives with optional filters and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "additives"
                ],
                "summary": "Get list of additives",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum price",
                        "name": "minPrice",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum price",
                        "name": "maxPrice",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by category ID",
                        "name": "categoryId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by product size ID",
                        "name": "productSizeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates an additive, including ingredients and optional image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "additives"
                ],
                "summary": "Create a new additive",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Additive name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "Base price",
                        "name": "basePrice",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Size",
                        "name": "size",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Unit ID",
                        "name": "unitId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "additiveCategoryId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machineId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Additive image",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "JSON-encoded ingredients array",
                        "name": "ingredients",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/additives/categories": {
            "get": {
                "description": "Returns list of additive categories with filters and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "additive-categories"
                ],
                "summary": "Get additive categories",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Include empty categories",
                        "name": "includeEmpty",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by product size ID",
                        "name": "productSizeId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by multiple select flag",
                        "name": "isMultipleSelect",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by required flag",
                        "name": "isRequired",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new additive category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "additive-categories"
                ],
                "summary": "Create additive category",
                "parameters": [
                    {
                        "description": "Category data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_additives_types.CreateAdditiveCategoryDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/additives/categories/{id}": {
            "get": {
                "description": "Returns a single additive category by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "additive-categories"
                ],
                "summary": "Get additive category details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_additives_types.AdditiveCategoryDetailsDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates existing additive category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "additive-categories"
                ],
                "summary": "Update additive category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated category data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_additives_types.UpdateAdditiveCategoryDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an additive category by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "additive-categories"
                ],
                "summary": "Delete additive category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "If the category is in use",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/additives/{id}": {
            "put": {
                "description": "Updates additive fields and image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "additives"
                ],
                "summary": "Update an existing additive",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Additive ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "Base price",
                        "name": "basePrice",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "Size",
                        "name": "size",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Unit ID",
                        "name": "unitId",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "additiveCategoryId",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machineId",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Delete existing image",
                        "name": "deleteImage",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "JSON-encoded ingredients array",
                        "name": "ingredients",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an additive by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "additives"
                ],
                "summary": "Delete an additive",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Additive ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/auth/employees/employee/login": {
            "post": {
                "description": "Authenticates an employee and returns a session token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee-auth"
                ],
                "summary": "Employee login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_auth_types.EmployeeLoginDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful, session token returned",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid credentials or bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Employee account inactive",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/auth/employees/logout": {
            "post": {
                "description": "Logs out the currently authenticated employee",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee-auth"
                ],
                "summary": "Employee logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/product-categories": {
            "get": {
                "description": "Returns paginated list of product categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-categories"
                ],
                "summary": "Get all product categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new product category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-categories"
                ],
                "summary": "Create new product category",
                "parameters": [
                    {
                        "description": "New category data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_categories_types.CreateProductCategoryDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/product-categories/{id}": {
            "get": {
                "description": "Retrieves product category details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-categories"
                ],
                "summary": "Get product category by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_categories_types.ProductCategoryDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing product category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-categories"
                ],
                "summary": "Update a product category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated category data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_categories_types.UpdateProductCategoryDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a product category by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-categories"
                ],
                "summary": "Delete product category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/stock-requests": {
            "get": {
                "description": "Retrieves stock requests filtered by store, warehouse, or date range. Supports pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stock-requests"
                ],
                "summary": "Get stock requests",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (ISO8601 format)",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (ISO8601 format)",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Stock request statuses",
                        "name": "statuses",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stock requests with pagination",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new stock request using the provided stock materials.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stock-requests"
                ],
                "summary": "Create a new stock request",
                "parameters": [
                    {
                        "description": "Stock Request Data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.CreateStockRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created stock request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request – invalid input or missing stock materials",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/stock-requests/add-material-to-latest-cart": {
            "post": {
                "description": "Adds a stock material entry to the current cart for the store.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stock-requests"
                ],
                "summary": "Add stock material to cart",
                "parameters": [
                    {
                        "description": "Stock Material Data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.StockRequestStockMaterialDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Stock material added to cart",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/stock-requests/current": {
            "get": {
                "description": "Retrieves the most recently created stock request for the franchisee store.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stock-requests"
                ],
                "summary": "Get last created stock request",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.StockRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/stock-requests/status/{requestId}/accept-with-change": {
            "put": {
                "description": "Accepts a stock request, applying changes as specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stock-requests"
                ],
                "summary": "Accept stock request with changes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stock Request ID",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Acceptance details with changes",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.AcceptWithChangeRequestStatusDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stock request status updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/stock-requests/status/{requestId}/completed": {
            "put": {
                "description": "Updates the stock request status to \"completed\".",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stock-requests"
                ],
                "summary": "Set stock request to completed",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stock Request ID",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stock request updated to completed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/stock-requests/status/{requestId}/in-delivery": {
            "put": {
                "description": "Updates the stock request status to \"in delivery\".",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stock-requests"
                ],
                "summary": "Set stock request to in-delivery",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stock Request ID",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stock request updated to in delivery",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/stock-requests/status/{requestId}/processed": {
            "put": {
                "description": "Updates the stock request status to \"processed\".",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stock-requests"
                ],
                "summary": "Set stock request to processed",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stock Request ID",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stock request updated to processed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/stock-requests/status/{requestId}/reject-store": {
            "put": {
                "description": "Rejects a stock request at the store level with a comment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stock-requests"
                ],
                "summary": "Reject stock request by store",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stock Request ID",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rejection details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.RejectStockRequestStatusDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stock request status updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/stock-requests/status/{requestId}/reject-warehouse": {
            "put": {
                "description": "Rejects a stock request at the warehouse level with a comment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stock-requests"
                ],
                "summary": "Reject stock request by warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stock Request ID",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rejection details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.RejectStockRequestStatusDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stock request status updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/stock-requests/{requestId}": {
            "get": {
                "description": "Retrieves the stock request details by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stock-requests"
                ],
                "summary": "Get a stock request by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stock Request ID",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.StockRequestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the stock materials for an existing stock request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stock-requests"
                ],
                "summary": "Update stock request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stock Request ID",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Stock materials update data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.StockRequestStockMaterialDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stock request updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a stock request based on its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stock-requests"
                ],
                "summary": "Delete stock request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stock Request ID",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stock request deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_Global-Optima_zeep-web_backend_internal_data.MachineCategory": {
            "type": "string",
            "enum": [
                "TEA",
                "COFFEE",
                "ICE_CREAM",
                "OTHERS"
            ],
            "x-enum-varnames": [
                "TEA",
                "COFFEE",
                "ICE_CREAM",
                "OTHERS"
            ]
        },
        "github_com_Global-Optima_zeep-web_backend_internal_localization.LocalizedMessage": {
            "type": "object",
            "properties": {
                "en": {
                    "type": "string"
                },
                "kk": {
                    "type": "string"
                },
                "ru": {
                    "type": "string"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_additives_types.AdditiveCategoryDetailsDTO": {
            "type": "object",
            "properties": {
                "additivesCount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isMultipleSelect": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_additives_types.CreateAdditiveCategoryDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "isMultipleSelect": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_additives_types.UpdateAdditiveCategoryDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "isMultipleSelect": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "minLength": 0
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_auth_types.EmployeeLoginDTO": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_categories_types.CreateProductCategoryDTO": {
            "type": "object",
            "required": [
                "machineCategory",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "machineCategory": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_data.MachineCategory"
                },
                "name": {
                    "type": "string",
                    "minLength": 2
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_categories_types.ProductCategoryDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "machineCategory": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_data.MachineCategory"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_categories_types.UpdateProductCategoryDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "machineCategory": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_data.MachineCategory"
                },
                "name": {
                    "type": "string",
                    "minLength": 2
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_facilityAddresses_types.FacilityAddressDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_franchisees_types.FranchiseeDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_ingredients_ingredientCategories_types.IngredientCategoryResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_ingredients_types.IngredientDTO": {
            "type": "object",
            "properties": {
                "calories": {
                    "type": "number"
                },
                "carbs": {
                    "type": "number"
                },
                "category": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_ingredients_ingredientCategories_types.IngredientCategoryResponse"
                },
                "expirationInDays": {
                    "type": "integer"
                },
                "fat": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "isAllergen": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "proteins": {
                    "type": "number"
                },
                "unit": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_units_types.UnitsDTO"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_regions_types.RegionDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.AcceptWithChangeRequestStatusDTO": {
            "type": "object",
            "required": [
                "comment",
                "items"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.StockRequestStockMaterialDTO"
                    }
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.CreateStockRequestDTO": {
            "type": "object",
            "required": [
                "stockMaterials"
            ],
            "properties": {
                "stockMaterials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.StockRequestStockMaterialDTO"
                    }
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.RejectStockRequestStatusDTO": {
            "type": "object",
            "required": [
                "comment"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.StockRequestMaterial": {
            "type": "object",
            "properties": {
                "quantity": {
                    "type": "number"
                },
                "stockMaterial": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_warehouse_stockMaterial_types.StockMaterialsDTO"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.StockRequestResponse": {
            "type": "object",
            "properties": {
                "autogeneratedComment": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_localization.LocalizedMessage"
                },
                "createdAt": {
                    "type": "string"
                },
                "requestId": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "stockMaterials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.StockRequestMaterial"
                    }
                },
                "store": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_stores_types.StoreDTO"
                },
                "storeComment": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "warehouse": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_warehouse_types.WarehouseDTO"
                },
                "warehouseComment": {
                    "type": "string"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_stockRequests_types.StockRequestStockMaterialDTO": {
            "type": "object",
            "required": [
                "quantity",
                "stockMaterialId"
            ],
            "properties": {
                "quantity": {
                    "type": "number"
                },
                "stockMaterialId": {
                    "type": "integer"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_stores_types.StoreDTO": {
            "type": "object",
            "properties": {
                "contactEmail": {
                    "type": "string"
                },
                "contactPhone": {
                    "type": "string"
                },
                "facilityAddress": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_facilityAddresses_types.FacilityAddressDTO"
                },
                "franchisee": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_franchisees_types.FranchiseeDTO"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "storeHours": {
                    "type": "string"
                },
                "warehouse": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_warehouse_types.WarehouseDTO"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_units_types.UnitsDTO": {
            "type": "object",
            "properties": {
                "conversionFactor": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_warehouse_stockMaterial_stockMaterialCategory_types.StockMaterialCategoryResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_warehouse_stockMaterial_types.StockMaterialsDTO": {
            "type": "object",
            "properties": {
                "barcode": {
                    "type": "string"
                },
                "category": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_warehouse_stockMaterial_stockMaterialCategory_types.StockMaterialCategoryResponse"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expirationPeriodInDays": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "ingredient": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_ingredients_types.IngredientDTO"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "safetyStock": {
                    "type": "number"
                },
                "size": {
                    "type": "number"
                },
                "unit": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_units_types.UnitsDTO"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_Global-Optima_zeep-web_backend_internal_modules_warehouse_types.WarehouseDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "facilityAddress": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_facilityAddresses_types.FacilityAddressDTO"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "$ref": "#/definitions/github_com_Global-Optima_zeep-web_backend_internal_modules_regions_types.RegionDTO"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
