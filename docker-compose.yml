version: '3.8'

services:
  db:
    container_name: db
    image: postgres:16-alpine
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_PASSWORD}
    ports:
      - '8081:80'
    depends_on:
      - db

  redis:
    container_name: redis
    image: redis:latest
    command:
      [
        'redis-server',
        '--requirepass',
        '${REDIS_PASSWORD}',
        '--appendonly',
        'yes',
      ]
    ports:
      - '6379:6379'
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
    networks:
      - backend_network
    volumes:
      - redis_data:/var/lib/redis/data

  redisinsight:
    container_name: redisinsight
    image: redislabs/redisinsight:latest
    ports:
      - '8001:8001'

  backend:
    container_name: backend
    build:
      context: ./backend
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SERVER_PORT: ${SERVER_PORT}
      CLIENT_URL: ${CLIENT_URL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
    depends_on:
      - db
      - redis
    expose:
      - '8080'
    networks:
      - backend_network

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    depends_on:
      - backend
    ports:
      - '80:80'

networks:
  backend_network:

volumes:
  db_data:
  redis_data:
