  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:latest
        env:
          REDIS_PORT: 6379
          REDIS_DB: 0
          REDIS_PASSWORD: ""
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DB_USER: testuser
      DB_PASSWORD: testpassword
      DB_NAME: testdb
      DB_HOST: localhost
      DB_PORT: 5432
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_PASSWORD: ""
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create test.env file
        run: |
          mkdir -p tests
          cat <<EOF > tests/test.env
          ENV=test

          DB_HOST=localhost
          DB_PORT=5432
          DB_USER=testuser
          DB_PASSWORD=testpassword
          DB_NAME=testdb

          REDIS_HOST=localhost
          REDIS_PORT=6379
          REDIS_DB=0
          REDIS_PASSWORD=
          REDIS_ENABLE_TLS=false

          DEFAULT_PAGE=1
          DEFAULT_PAGE_SIZE=10
          MAX_PAGE_SIZE=100
          DEFAULT_SORT_PARAMETER="createdAt"
          DEFAULT_SORT_DIRECTION="DESC"

          JWT_CUSTOMER_SECRET_KEY=SECRET_KEY_FOR_CUSTOMERS
          JWT_EMPLOYEE_SECRET_KEY=SECRET_KEY_FOR_EMPLOYEES

          JWT_CUSTOMER_TOKEN_TTL=15m
          JWT_EMPLOYEE_TOKEN_TTL=168h
          EOF

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.1'

      - name: Check Go version
        run: go version

      - name: Update PATH for Go
        run: echo "$(go env GOROOT)/bin" >> $GITHUB_PATH

      - name: Clear Go cache
        run: go clean -cache -modcache -i -r

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.61.0
          echo "$GOPATH/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: go mod tidy

      - name: Install gofumpt
        run: go install mvdan.cc/gofumpt@latest

      - name: Run gofumpt check
        run: |
          CHANGED_FILES=$(gofumpt -l .)
          if [ -n "$CHANGED_FILES" ]; then
            echo "Code is not formatted according to gofumpt:"
            echo "$CHANGED_FILES"
            exit 1
          fi

      - name: Run golangci-lint
        run: golangci-lint run -v --concurrency=2 --timeout=5m

      - name: Run tests
        run: go test -p 1 ./...
