services:
  backend:
    container_name: backend
    build:
      context: ./backend
      args:
        ENV: ${BACKEND_ENV}
        DB_HOST: ${DB_HOST}
        DB_PORT: ${DB_PORT}
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_NAME: ${DB_NAME}
        DB_SSL_MODE: ${DB_SSL_MODE}
        SERVER_PORT: ${SERVER_PORT}
        CLIENT_URL: ${CLIENT_URL}
        IMAGE_CONVERTER_URL: ${IMAGE_CONVERTER_URL}
        CRON_JOBS_ENABLE: ${CRON_JOBS_ENABLE}
        JWT_CUSTOMER_SECRET_KEY: ${JWT_CUSTOMER_SECRET_KEY}
        JWT_EMPLOYEE_SECRET_KEY: ${JWT_EMPLOYEE_SECRET_KEY}
        JWT_CUSTOMER_TOKEN_TTL: ${JWT_CUSTOMER_TOKEN_TTL}
        JWT_EMPLOYEE_TOKEN_TTL: ${JWT_EMPLOYEE_TOKEN_TTL}
        S3_ACCESS_KEY: ${S3_ACCESS_KEY}
        S3_SECRET_KEY: ${S3_SECRET_KEY}
        S3_ACCESS_ENDPOINT: ${S3_ACCESS_ENDPOINT}
        S3_RESPONSE_ENDPOINT: ${S3_RESPONSE_ENDPOINT}
        S3_BUCKET_NAME: ${S3_BUCKET_NAME}
        REDIS_USERNAME: ${REDIS_USERNAME}
        REDIS_HOST: ${REDIS_HOST}
        REDIS_PORT: ${REDIS_PORT}
        REDIS_PASSWORD: ${REDIS_PASSWORD}
        REDIS_DB: ${REDIS_DB}
        REDIS_ENABLE_TLS: ${REDIS_ENABLE_TLS}
        DEFAULT_PAGE: ${DEFAULT_PAGE}
        DEFAULT_PAGE_SIZE: ${DEFAULT_PAGE_SIZE}
        MAX_PAGE_SIZE: ${MAX_PAGE_SIZE}
        PAYMENT_SECRET: ${PAYMENT_SECRET}
    env_file:
      - .env
    ports:
      - '8080:8080'
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - app_network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      args:
        VITE_API_URL: ${VITE_API_URL}
        VITE_WS_URL: ${VITE_WS_URL}
        VITE_PAYMENT_SECRET: ${PAYMENT_SECRET}
        VITE_SAVE_ON_PRINT: ${VITE_SAVE_ON_PRINT}
        VITE_TEST_PAYMENT: ${VITE_TEST_PAYMENT}
    env_file:
      - .env
    ports:
      - '80:80'
    environment:
      NGINX_SERVER_NAME: ${NGINX_SERVER_NAME}
    networks:
      - app_network
    depends_on:
      backend:
        condition: service_started

  image-converter:
    container_name: image-converter
    build:
      context: ./image-converter
    ports:
      - '8082:8082'
    networks:
      - app_network

######################################################################
# Docker Network
######################################################################
networks:
  app_network:
    driver: bridge
